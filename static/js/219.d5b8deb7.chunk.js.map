{"version":3,"file":"static/js/219.d5b8deb7.chunk.js","mappings":"uPAEaA,EAAaC,EAAAA,EAAAA,GAAH,4EAMVC,EAAQD,EAAAA,EAAAA,GAAH,8D,4BC2BlB,EA5Ba,WACX,IAAQE,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAoCE,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,GAAUN,GACPO,MAAK,SAAAC,GAAQ,OAAIJ,GAAc,OAAII,EAASC,MAA/B,IACbC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,EAAlB,GACf,GAAE,CAACX,KAGF,SAACH,EAAD,UACGM,EAAWU,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,aAAcC,EAAW,EAAXA,KACxCC,EAAaF,EAAY,wCACMA,GACjCG,EACJ,OACE,UAACpB,EAAD,YACE,gBAAKqB,IAAKF,EAAYG,IAAI,MAC1B,uBAAIJ,KACJ,uBAAIF,MAHMD,EAMf,KAGN,C","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ActorsList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n`;\n\nexport const Actor = styled.li`\n  list-style: none;\n  width: 100px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ActorsList, Actor } from './Cast.styled';\nimport dummy from '../../images/dummy-poster.jpg';\n\nimport { fetchCast } from 'services/MovieApiService';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [movieArray, setMovieArray] = useState([]);\n\n  useEffect(() => {\n    fetchCast(movieId)\n      .then(response => setMovieArray([...response.cast]))\n      .catch(error => console.error(error));\n  }, [movieId]);\n\n  return (\n    <ActorsList>\n      {movieArray.map(({ id, character, profile_path, name }) => {\n        const actorImage = profile_path\n          ? `https://image.tmdb.org/t/p/w92${profile_path}`\n          : dummy;\n        return (\n          <Actor key={id}>\n            <img src={actorImage} alt=\"\"></img>\n            <p>{name}</p>\n            <p>{character}</p>\n          </Actor>\n        );\n      })}\n    </ActorsList>\n  );\n};\n\nexport default Cast;\n"],"names":["ActorsList","styled","Actor","movieId","useParams","useState","movieArray","setMovieArray","useEffect","fetchCast","then","response","cast","catch","error","console","map","id","character","profile_path","name","actorImage","dummy","src","alt"],"sourceRoot":""}