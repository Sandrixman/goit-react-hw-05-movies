{"version":3,"file":"static/js/264.f324a53f.chunk.js","mappings":"kSAGaA,GAAaC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,iQAeVE,EAAYF,EAAAA,EAAAA,IAAH,yFAQTG,EAAaH,EAAAA,EAAAA,IAAH,gDAIVI,EAAiBJ,EAAAA,EAAAA,IAAH,0C,SCjBrBK,EAAY,SAAC,GAAe,IAAD,MAAZC,EAAY,EAAZA,MACXC,EAAuDD,EAAvDC,YAAaC,EAA0CF,EAA1CE,OAAQC,EAAkCH,EAAlCG,MAAOC,EAA2BJ,EAA3BI,SAAUC,EAAiBL,EAAjBK,aACxCC,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAE9CC,EAAiBX,EAAW,yCACIA,GAClCY,EAEEC,EAAa,GATY,UAUXZ,GAVW,IAU/B,2BAA4B,CAAC,IAAlBa,EAAiB,QAC1BD,EAAWE,KAAKD,EAAME,KACvB,CAZ8B,+BAc/B,OACE,iCACE,UAACxB,EAAD,CAAYyB,GAAIV,EAAaW,QAA7B,WACE,SAAC,MAAD,IADF,cAIA,UAACvB,EAAD,YACE,gBAAKwB,IAAKR,EAAgBS,IAAKlB,KAC/B,4BACE,UAACN,EAAD,YACE,wBAAKM,KACL,oCAAYE,EAAaiB,QAAQ,UAEnC,UAACzB,EAAD,YACE,sCACA,uBAAIO,QAEN,UAACP,EAAD,YACE,oCACA,uBAAIiB,EAAWS,KAAK,kBAI1B,UAACzB,EAAD,YACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMoB,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,8BAIN,SAAC,EAAAM,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,QAIP,EAED1B,EAAU2B,SAAW,CACnB1B,MAAO2B,IAAAA,MAAgB,CACrBxB,MAAOwB,IAAAA,OAAAA,WACPtB,aAAcsB,IAAAA,OAAAA,WACdC,cAAeD,IAAAA,OAAAA,WACfvB,SAAUuB,IAAAA,OAAAA,WACVzB,OAAQyB,IAAAA,OAAAA,cAIZ,O","sources":["components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  border: 1px solid;\n  border-radius: 10px;\n  padding: 2px 10px;\n  margin-bottom: 5px;\n  gap: 5px;\n  align-items: center;\n  color: black;\n  text-decoration: none;\n  :hover {\n    color: orange;\n  }\n`;\n\nexport const MovieInfo = styled.div`\n  display: flex;\n  gap: 25px;\n  img {\n    width: 200px;\n  }\n`;\n\nexport const MovieDescr = styled.div`\n  margin-bottom: 10px;\n`;\n\nexport const AdditionalInfo = styled.div`\n  padding: 20px;\n`;\n","import { useRef } from 'react';\nimport { Link, Outlet, useLocation } from 'react-router-dom';\nimport { Suspense } from 'react';\nimport { FaArrowAltCircleLeft } from 'react-icons/fa';\nimport PropTypes from 'prop-types';\nimport dummy from '../../images/dummy-poster.jpg';\nimport {\n  StyledLink,\n  MovieInfo,\n  MovieDescr,\n  AdditionalInfo,\n} from './MovieCard.styled';\n\nconst MovieCard = ({ movie }) => {\n  const { poster_path, genres, title, overview, vote_average } = movie;\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/');\n\n  const fullposterPath = poster_path\n    ? `https://image.tmdb.org/t/p/w300${poster_path}`\n    : dummy;\n\n  const genresList = [];\n  for (const genre of genres) {\n    genresList.push(genre.name);\n  }\n\n  return (\n    <>\n      <StyledLink to={backLinkHref.current}>\n        <FaArrowAltCircleLeft />\n        Go back\n      </StyledLink>\n      <MovieInfo>\n        <img src={fullposterPath} alt={title} />\n        <div>\n          <MovieDescr>\n            <h2>{title}</h2>\n            <p>Rating: {vote_average.toFixed(1)}</p>\n          </MovieDescr>\n          <MovieDescr>\n            <h3>Overview</h3>\n            <p>{overview}</p>\n          </MovieDescr>\n          <MovieDescr>\n            <h3>Genres</h3>\n            <p>{genresList.join(', ')}</p>\n          </MovieDescr>\n        </div>\n      </MovieInfo>\n      <AdditionalInfo>\n        <h3>Additional Information</h3>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n      </AdditionalInfo>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nMovieCard.propType = {\n  movie: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n    backdrop_path: PropTypes.string.isRequired,\n    overview: PropTypes.string.isRequired,\n    genres: PropTypes.string.isRequired,\n  }),\n};\n\nexport default MovieCard;\n"],"names":["StyledLink","styled","Link","MovieInfo","MovieDescr","AdditionalInfo","MovieCard","movie","poster_path","genres","title","overview","vote_average","location","useLocation","backLinkHref","useRef","state","from","fullposterPath","dummy","genresList","genre","push","name","to","current","src","alt","toFixed","join","Suspense","fallback","propType","PropTypes","backdrop_path"],"sourceRoot":""}