{"version":3,"file":"static/js/806.98a4151a.chunk.js","mappings":"yPAEaA,EAAcC,EAAAA,EAAAA,GAAH,mFAMXC,EAASD,EAAAA,EAAAA,GAAH,6CAINE,EAASF,EAAAA,EAAAA,EAAH,6C,mBCNXG,GAAiBC,EAAAA,EAAAA,KAAjBD,aA+BR,EA7BgB,WACd,IAAQE,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAoCE,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAQA,OANAC,EAAAA,EAAAA,YAAU,WACRP,EAAaE,GACVM,MAAK,SAAAC,GAAQ,OAAIH,GAAc,OAAIG,EAASC,SAA/B,IACbC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,EAAlB,GACf,GAAE,CAACV,KAGF,SAACN,EAAD,UACGS,EAAWS,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAEfC,EAFqC,EAAdC,QAEUC,MAAM,MAE7C,OACE,UAACrB,EAAD,YACE,UAACC,EAAD,sBAAiBiB,KAChBC,EAAUH,KAAI,SAACM,EAAWC,GAAZ,OACb,uBAAgBD,GAARC,EADK,MAFJN,EAOhB,KAGN,C,kECuBD,IAxDwB,WACtB,IAAMO,EAAU,mCACVC,EAAW,gCAFW,wCAI5B,WAA0BC,GAA1B,0FACyBC,EAAAA,EAAAA,GAAM,GAAD,OACvBF,EADuB,iBACNC,EADM,oBACcF,IAF5C,uBACUI,EADV,EACUA,KADV,kBAISA,GAJT,4CAJ4B,8DAW5B,WAAyBF,GAAzB,0FACyBC,EAAAA,EAAAA,GAAM,GAAD,OACvBF,EADuB,iBACNC,EADM,4BACsBF,IAFpD,uBACUI,EADV,EACUA,KADV,kBAISA,GAJT,4CAX4B,8DAkB5B,WAA4BF,GAA5B,0FACyBC,EAAAA,EAAAA,GAAM,GAAD,OACvBF,EADuB,iBACNC,EADM,4BACsBF,IAFpD,uBACUI,EADV,EACUA,KADV,kBAISA,GAJT,4CAlB4B,8DAyB5B,uGACyBD,EAAAA,EAAAA,GAAM,GAAD,OACvBF,EADuB,uCACgBD,EADhB,YAD9B,uBACUI,EADV,EACUA,KADV,kBAISA,GAJT,4CAzB4B,8DAgC5B,WAA2BC,GAA3B,0FACyBF,EAAAA,EAAAA,GAAM,GAAD,OACvBF,EADuB,8BACOI,EADP,oBACwBL,EADxB,YAD9B,uBACUI,EADV,EACUA,KADV,kBAISA,GAJT,4CAhC4B,sBA8C5B,MAAO,CACLE,WA/C0B,4CAgD1BC,UAhD0B,4CAiD1B7B,aAjD0B,4CAkD1B8B,kBAlD0B,2CAmD1BC,YAnD0B,4CAsD7B,C","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.js","services/MovieApiService.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ReviewsList = styled.ul`\n  gap: 20px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Review = styled.li`\n  list-style: none;\n`;\n\nexport const Author = styled.p`\n  font-weight: 600;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ReviewsList, Review, Author } from './Reviews.styled';\n\nimport MovieApiService from 'services/MovieApiService';\n\nconst { fetchReviews } = MovieApiService();\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [movieArray, setMovieArray] = useState([]);\n\n  useEffect(() => {\n    fetchReviews(movieId)\n      .then(response => setMovieArray([...response.results]))\n      .catch(error => console.error(error));\n  }, [movieId]);\n\n  return (\n    <ReviewsList>\n      {movieArray.map(({ id, author, content }) => {\n        const textWithoutParagraph = content;\n        const textArray = textWithoutParagraph.split('\\n');\n\n        return (\n          <Review key={id}>\n            <Author>Author: {author}</Author>\n            {textArray.map((paragraph, index) => (\n              <p key={index}>{paragraph}</p>\n            ))}\n          </Review>\n        );\n      })}\n    </ReviewsList>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst MovieApiService = () => {\n  const API_KEY = 'bf6a0fae11fd4c107d4af2168346d5c6';\n  const BASE_URL = 'https://api.themoviedb.org/3/';\n\n  async function fetchMovie(movie_id) {\n    const { data } = await axios(\n      `${BASE_URL}movie/${movie_id}?api_key=${API_KEY}`\n    );\n    return data;\n  }\n\n  async function fetchCast(movie_id) {\n    const { data } = await axios(\n      `${BASE_URL}movie/${movie_id}/credits?api_key=${API_KEY}`\n    );\n    return data;\n  }\n\n  async function fetchReviews(movie_id) {\n    const { data } = await axios(\n      `${BASE_URL}movie/${movie_id}/reviews?api_key=${API_KEY}`\n    );\n    return data;\n  }\n\n  async function fetchPopularMovie() {\n    const { data } = await axios(\n      `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=1`\n    );\n    return data;\n  }\n\n  async function querySearch(query) {\n    const { data } = await axios(\n      `${BASE_URL}search/movie?query=${query}&api_key=${API_KEY}&page=1`\n    );\n    return data;\n  }\n\n  // async function fetchTrailer(id) {\n  //   const { data } = await axios(\n  //     `${BASE_URL}movie/${id}/videos?api_key=${API_KEY}`\n  //   );\n  //   return data;\n  // }\n\n  return {\n    fetchMovie,\n    fetchCast,\n    fetchReviews,\n    fetchPopularMovie,\n    querySearch,\n    // fetchTrailer,\n  };\n};\n\nexport default MovieApiService;\n"],"names":["ReviewsList","styled","Review","Author","fetchReviews","MovieApiService","movieId","useParams","useState","movieArray","setMovieArray","useEffect","then","response","results","catch","error","console","map","id","author","textArray","content","split","paragraph","index","API_KEY","BASE_URL","movie_id","axios","data","query","fetchMovie","fetchCast","fetchPopularMovie","querySearch"],"sourceRoot":""}