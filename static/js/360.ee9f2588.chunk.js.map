{"version":3,"file":"static/js/360.ee9f2588.chunk.js","mappings":"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","sources":["components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.js","pages/MovieDetails.js","services/MovieApiService.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  border: 1px solid;\n  border-radius: 10px;\n  padding: 2px 10px;\n  margin-bottom: 5px;\n  gap: 5px;\n  align-items: center;\n  color: black;\n  text-decoration: none;\n  :hover {\n    color: orange;\n  }\n`;\n\nexport const MovieInfo = styled.div`\n  display: flex;\n  gap: 25px;\n`;\n\nexport const MovieDescr = styled.div`\n  margin-bottom: 10px;\n`;\n\nexport const AdditionalInfo = styled.div`\n  padding: 20px;\n`;\n","import { useRef } from 'react';\nimport { Link, Outlet, useLocation } from 'react-router-dom';\nimport { Suspense } from 'react';\nimport { FaArrowAltCircleLeft } from 'react-icons/fa';\nimport {\n  StyledLink,\n  MovieInfo,\n  MovieDescr,\n  AdditionalInfo,\n} from './MovieCard.styled';\nimport PropTypes from 'prop-types';\nimport dummy from '../../images/dummy-poster.jpg';\n\nconst MovieCard = ({ movie }) => {\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/');\n\n  const fullposterPath = movie.poster_path\n    ? `https://image.tmdb.org/t/p/w300${movie.poster_path}`\n    : dummy;\n\n  const genres = [];\n  for (const genre of movie.genres) {\n    genres.push(genre.name);\n  }\n\n  return (\n    <>\n      {movie.title && (\n        <>\n          <StyledLink to={backLinkHref.current}>\n            <FaArrowAltCircleLeft />\n            Go back\n          </StyledLink>\n          <MovieInfo>\n            <img src={fullposterPath} alt={movie.title} />\n            <div>\n              <MovieDescr>\n                <h2>{movie.title}</h2>\n                <p>Rating: {movie.vote_average.toFixed(1)}</p>\n              </MovieDescr>\n              <MovieDescr>\n                <h3>Overview</h3>\n                <p>{movie.overview}</p>\n              </MovieDescr>\n              <MovieDescr>\n                <h3>Genres</h3>\n                <p>{genres.join(', ')}</p>\n              </MovieDescr>\n            </div>\n          </MovieInfo>\n          <AdditionalInfo>\n            <h3>Additional Information</h3>\n            <ul>\n              <li>\n                <Link to=\"cast\">Cast</Link>\n              </li>\n              <li>\n                <Link to=\"reviews\">Reviews</Link>\n              </li>\n            </ul>\n          </AdditionalInfo>\n          <Suspense fallback={<div>Loading...</div>}>\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n    </>\n  );\n};\n\nMovieCard.propType = {\n  movie: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n    backdrop_path: PropTypes.string.isRequired,\n    overview: PropTypes.string.isRequired,\n    genres: PropTypes.string.isRequired,\n  }),\n};\n\nexport default MovieCard;\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport MovieApiService from 'services/MovieApiService';\nimport MovieCard from 'components/MovieCard/MovieCard';\n\nconst { fetchMovie } = MovieApiService();\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState({});\n\n  useEffect(() => {\n    fetchMovie(movieId)\n      .then(({ poster_path, genres, title, overview, vote_average }) => {\n        setMovie({\n          poster_path,\n          genres,\n          title,\n          overview,\n          vote_average,\n        });\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }, [movieId]);\n\n  return <>{movie.title && <MovieCard movie={movie} />}</>;\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst MovieApiService = () => {\n  const API_KEY = 'bf6a0fae11fd4c107d4af2168346d5c6';\n  const BASE_URL = 'https://api.themoviedb.org/3/';\n\n  async function fetchMovie(movie_id) {\n    const { data } = await axios(\n      `${BASE_URL}movie/${movie_id}?api_key=${API_KEY}`\n    );\n    return data;\n  }\n\n  async function fetchCast(movie_id) {\n    const { data } = await axios(\n      `${BASE_URL}movie/${movie_id}/credits?api_key=${API_KEY}`\n    );\n    return data;\n  }\n\n  async function fetchReviews(movie_id) {\n    const { data } = await axios(\n      `${BASE_URL}movie/${movie_id}/reviews?api_key=${API_KEY}`\n    );\n    return data;\n  }\n\n  async function fetchPopularMovie() {\n    const { data } = await axios(\n      `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=1`\n    );\n    return data;\n  }\n\n  async function querySearch(query) {\n    const { data } = await axios(\n      `${BASE_URL}search/movie?query=${query}&api_key=${API_KEY}&page=1`\n    );\n    return data;\n  }\n\n  // async function fetchTrailer(id) {\n  //   const { data } = await axios(\n  //     `${BASE_URL}movie/${id}/videos?api_key=${API_KEY}`\n  //   );\n  //   return data;\n  // }\n\n  return {\n    fetchMovie,\n    fetchCast,\n    fetchReviews,\n    fetchPopularMovie,\n    querySearch,\n    // fetchTrailer,\n  };\n};\n\nexport default MovieApiService;\n"],"names":["StyledLink","styled","Link","MovieInfo","MovieDescr","AdditionalInfo","MovieCard","movie","location","useLocation","backLinkHref","useRef","state","from","fullposterPath","poster_path","dummy","genres","genre","push","name","title","to","current","src","alt","vote_average","toFixed","overview","join","Suspense","fallback","propType","PropTypes","backdrop_path","fetchMovie","MovieApiService","movieId","useParams","useState","setMovie","useEffect","then","catch","error","console","API_KEY","BASE_URL","movie_id","axios","data","query","fetchCast","fetchReviews","fetchPopularMovie","querySearch"],"sourceRoot":""}