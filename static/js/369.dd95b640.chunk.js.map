{"version":3,"file":"static/js/369.dd95b640.chunk.js","mappings":"sNAEaA,EAASC,EAAAA,EAAAA,GAAH,+EAMNC,EAAiBD,EAAAA,EAAAA,GAAH,8H,SCkB3B,EAtBmB,SAAC,GAAoB,IAAlBE,EAAiB,EAAjBA,WACdC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACL,EAAD,UACGG,EAAWG,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACrB,OACE,SAACN,EAAD,WACE,SAAC,KAAD,CAAMO,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMP,GAA1C,SACGI,KAFgBD,EAMxB,KAGN,C,mIChBOK,GAAsBC,EAAAA,EAAAA,KAAtBD,kBAmBR,EAjB2B,WACzB,OAAoCE,EAAAA,EAAAA,UAAS,IAA7C,eAAOX,EAAP,KAAmBY,EAAnB,KAQA,OANAC,EAAAA,EAAAA,YAAU,WACRJ,IACGK,MAAK,SAAAC,GAAQ,OAAIH,GAAc,OAAIG,EAASC,SAA/B,IACbC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,EAAlB,GACf,GAAE,KAGD,iCACE,4CACA,SAACE,EAAA,EAAD,CAAYpB,WAAYA,MAG7B,ECfD,EAJa,WACX,OAAO,SAAC,EAAD,GACR,C,kECsDD,IAxDwB,WACtB,IAAMqB,EAAU,mCACVC,EAAW,gCAFW,wCAI5B,WAA0BC,GAA1B,0FACyBC,EAAAA,EAAAA,GAAM,GAAD,OACvBF,EADuB,iBACNC,EADM,oBACcF,IAF5C,uBACUI,EADV,EACUA,KADV,kBAISA,GAJT,4CAJ4B,8DAW5B,WAAyBF,GAAzB,0FACyBC,EAAAA,EAAAA,GAAM,GAAD,OACvBF,EADuB,iBACNC,EADM,4BACsBF,IAFpD,uBACUI,EADV,EACUA,KADV,kBAISA,GAJT,4CAX4B,8DAkB5B,WAA4BF,GAA5B,0FACyBC,EAAAA,EAAAA,GAAM,GAAD,OACvBF,EADuB,iBACNC,EADM,4BACsBF,IAFpD,uBACUI,EADV,EACUA,KADV,kBAISA,GAJT,4CAlB4B,8DAyB5B,uGACyBD,EAAAA,EAAAA,GAAM,GAAD,OACvBF,EADuB,uCACgBD,EADhB,YAD9B,uBACUI,EADV,EACUA,KADV,kBAISA,GAJT,4CAzB4B,8DAgC5B,WAA2BC,GAA3B,0FACyBF,EAAAA,EAAAA,GAAM,GAAD,OACvBF,EADuB,8BACOI,EADP,oBACwBL,EADxB,YAD9B,uBACUI,EADV,EACUA,KADV,kBAISA,GAJT,4CAhC4B,sBA8C5B,MAAO,CACLE,WA/C0B,4CAgD1BC,UAhD0B,4CAiD1BC,aAjD0B,4CAkD1BpB,kBAlD0B,2CAmD1BqB,YAnD0B,4CAsD7B,C","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.js","components/FetchPopularMovies/FetchPopularMovies.js","pages/Home.js","services/MovieApiService.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Movies = styled.ul`\n  font-size: 20px;\n  padding: 20px;\n  margin: auto;\n`;\n\nexport const MoviesListItem = styled.li`\n  a {\n    text-decoration: none;\n    color: black;\n    :hover {\n      color: orange;\n    }\n  }\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Movies, MoviesListItem } from './MoviesList.styled';\n\nconst MoviesList = ({ movieArray }) => {\n  const location = useLocation();\n\n  return (\n    <Movies>\n      {movieArray.map(({ id, title }) => {\n        return (\n          <MoviesListItem key={id}>\n            <Link to={`/search/${id}`} state={{ from: location }}>\n              {title}\n            </Link>\n          </MoviesListItem>\n        );\n      })}\n    </Movies>\n  );\n};\n\nMoviesList.propTypes = {\n  movieArray: PropTypes.array.isRequired,\n};\n\nexport default MoviesList;\n","import { useEffect, useState } from 'react';\nimport MovieApiService from 'services/MovieApiService';\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nconst { fetchPopularMovie } = MovieApiService();\n\nconst FetchPopularMovies = () => {\n  const [movieArray, setMovieArray] = useState([]);\n\n  useEffect(() => {\n    fetchPopularMovie()\n      .then(response => setMovieArray([...response.results]))\n      .catch(error => console.error(error));\n  }, []);\n\n  return (\n    <>\n      <h1>Trending today</h1>\n      <MoviesList movieArray={movieArray} />\n    </>\n  );\n};\n\nexport default FetchPopularMovies;\n","import FetchPopularMovies from 'components/FetchPopularMovies/FetchPopularMovies';\n\nconst Home = () => {\n  return <FetchPopularMovies />;\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst MovieApiService = () => {\n  const API_KEY = 'bf6a0fae11fd4c107d4af2168346d5c6';\n  const BASE_URL = 'https://api.themoviedb.org/3/';\n\n  async function fetchMovie(movie_id) {\n    const { data } = await axios(\n      `${BASE_URL}movie/${movie_id}?api_key=${API_KEY}`\n    );\n    return data;\n  }\n\n  async function fetchCast(movie_id) {\n    const { data } = await axios(\n      `${BASE_URL}movie/${movie_id}/credits?api_key=${API_KEY}`\n    );\n    return data;\n  }\n\n  async function fetchReviews(movie_id) {\n    const { data } = await axios(\n      `${BASE_URL}movie/${movie_id}/reviews?api_key=${API_KEY}`\n    );\n    return data;\n  }\n\n  async function fetchPopularMovie() {\n    const { data } = await axios(\n      `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=1`\n    );\n    return data;\n  }\n\n  async function querySearch(query) {\n    const { data } = await axios(\n      `${BASE_URL}search/movie?query=${query}&api_key=${API_KEY}&page=1`\n    );\n    return data;\n  }\n\n  // async function fetchTrailer(id) {\n  //   const { data } = await axios(\n  //     `${BASE_URL}movie/${id}/videos?api_key=${API_KEY}`\n  //   );\n  //   return data;\n  // }\n\n  return {\n    fetchMovie,\n    fetchCast,\n    fetchReviews,\n    fetchPopularMovie,\n    querySearch,\n    // fetchTrailer,\n  };\n};\n\nexport default MovieApiService;\n"],"names":["Movies","styled","MoviesListItem","movieArray","location","useLocation","map","id","title","to","state","from","fetchPopularMovie","MovieApiService","useState","setMovieArray","useEffect","then","response","results","catch","error","console","MoviesList","API_KEY","BASE_URL","movie_id","axios","data","query","fetchMovie","fetchCast","fetchReviews","querySearch"],"sourceRoot":""}